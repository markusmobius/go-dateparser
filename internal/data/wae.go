// Code is generated by script; DO NOT EDIT.

package data

import "github.com/markusmobius/go-dateparser/internal/regexp"

var (
	wae_Locale LocaleData
)

func init() {
	wae_Locale = merge(nil, LocaleData{
		Name:      "wae",
		DateOrder: "YMD",
		Charset:   []rune(`bcdefghijklnorstuwxyzáäíóöüčš`),
		Translations: map[string][]string{
			"christmanet": {"december"},
			"herbstmanet": {"september"},
			"wintermanet": {"november"},
			"abrille":     {"april"},
			"frontag":     {"thursday"},
			"minutta":     {"minute"},
			"mittwuc":     {"wednesday"},
			"samstag":     {"saturday"},
			"schtund":     {"hour"},
			"sekunda":     {"second"},
			"sunntag":     {"sunday"},
			"wimanet":     {"october"},
			"bracet":      {"june"},
			"fritag":      {"friday"},
			"heiwet":      {"july"},
			"hornig":      {"february"},
			"jenner":      {"january"},
			"mantag":      {"monday"},
			"oigste":      {"august"},
			"zistag":      {"tuesday"},
			"manet":       {"month"},
			"marze":       {"march"},
			"meije":       {"may"},
			"wuca":        {"week"},
			"abr":         {"april"},
			"bra":         {"june"},
			"chr":         {"december"},
			"fri":         {"friday"},
			"fro":         {"thursday"},
			"gmt":         {"gmt"},
			"hei":         {"july"},
			"her":         {"september"},
			"hor":         {"february"},
			"jar":         {"year"},
			"jen":         {"january"},
			"man":         {"monday"},
			"mar":         {"march"},
			"mei":         {"may"},
			"mit":         {"wednesday"},
			"oig":         {"august"},
			"sam":         {"saturday"},
			"sun":         {"sunday"},
			"tag":         {"day"},
			"utc":         {"utc"},
			"wim":         {"october"},
			"win":         {"november"},
			"zis":         {"tuesday"},
			"am":          {"am"},
			"pm":          {"pm"},
			" ":           {" "},
			"'":           {""},
			"+":           {"+"},
			",":           {""},
			"-":           {"-"},
			".":           {"."},
			"/":           {"/"},
			":":           {":"},
			";":           {""},
			"@":           {""},
			"[":           {""},
			"]":           {""},
			"z":           {"z"},
			"|":           {""},
		},
		RelativeType: map[string]string{
			"this minute": "0 minute ago",
			"last month":  "1 month ago",
			"next month":  "in 1 month",
			"this month":  "0 month ago",
			"last week":   "1 week ago",
			"last year":   "1 year ago",
			"next week":   "in 1 week",
			"next year":   "in 1 year",
			"this hour":   "0 hour ago",
			"this week":   "0 week ago",
			"this year":   "0 year ago",
			"gester":      "1 day ago",
			"hitte":       "0 day ago",
			"more":        "in 1 day",
			"now":         "0 second ago",
		},
		RelativeTypeRegexes: []ReplacementData{
			{regexp.MustCompile(`(?i)vor (\d+[.,]?\d*) sekunde`), "$1 second ago"},
			{regexp.MustCompile(`(?i)vor (\d+[.,]?\d*) minuta`), "$1 minute ago"},
			{regexp.MustCompile(`(?i)vor (\d+[.,]?\d*) minute`), "$1 minute ago"},
			{regexp.MustCompile(`(?i)vor (\d+[.,]?\d*) sekund`), "$1 second ago"},
			{regexp.MustCompile(`(?i)vor (\d+[.,]?\d*) stunde`), "$1 hour ago"},
			{regexp.MustCompile(`(?i)i (\d+[.,]?\d*) sekunde`), "in $1 second"},
			{regexp.MustCompile(`(?i)vor (\d+[.,]?\d*) manet`), "$1 month ago"},
			{regexp.MustCompile(`(?i)vor (\d+[.,]?\d*) stund`), "$1 hour ago"},
			{regexp.MustCompile(`(?i)cor (\d+[.,]?\d*) wuca`), "$1 week ago"},
			{regexp.MustCompile(`(?i)i (\d+[.,]?\d*) minuta`), "in $1 minute"},
			{regexp.MustCompile(`(?i)i (\d+[.,]?\d*) minute`), "in $1 minute"},
			{regexp.MustCompile(`(?i)i (\d+[.,]?\d*) sekund`), "in $1 second"},
			{regexp.MustCompile(`(?i)i (\d+[.,]?\d*) stunde`), "in $1 hour"},
			{regexp.MustCompile(`(?i)vor (\d+[.,]?\d*) wuca`), "$1 week ago"},
			{regexp.MustCompile(`(?i)cor (\d+[.,]?\d*) jar`), "$1 year ago"},
			{regexp.MustCompile(`(?i)i (\d+[.,]?\d*) manet`), "in $1 month"},
			{regexp.MustCompile(`(?i)i (\d+[.,]?\d*) stund`), "in $1 hour"},
			{regexp.MustCompile(`(?i)vor (\d+[.,]?\d*) jar`), "$1 year ago"},
			{regexp.MustCompile(`(?i)vor (\d+[.,]?\d*) tag`), "$1 day ago"},
			{regexp.MustCompile(`(?i)i (\d+[.,]?\d*) wuca`), "in $1 week"},
			{regexp.MustCompile(`(?i)i (\d+[.,]?\d*) jar`), "in $1 year"},
			{regexp.MustCompile(`(?i)i (\d+[.,]?\d*) tag`), "in $1 day"},
		},
		RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(vor \d+[.,]?\d* sekunde|vor \d+[.,]?\d* minuta|vor \d+[.,]?\d* minute|vor \d+[.,]?\d* sekund|vor \d+[.,]?\d* stunde|i \d+[.,]?\d* sekunde|vor \d+[.,]?\d* manet|vor \d+[.,]?\d* stund|cor \d+[.,]?\d* wuca|i \d+[.,]?\d* minuta|i \d+[.,]?\d* minute|i \d+[.,]?\d* sekund|i \d+[.,]?\d* stunde|vor \d+[.,]?\d* wuca|cor \d+[.,]?\d* jar|i \d+[.,]?\d* manet|i \d+[.,]?\d* stund|vor \d+[.,]?\d* jar|vor \d+[.,]?\d* tag|i \d+[.,]?\d* wuca|i \d+[.,]?\d* jar|i \d+[.,]?\d* tag)(\z|[^\pL\pM\d]|_)`),
		RxExactCombined: regexp.MustCompile(`(?i)^(vor \d+[.,]?\d* sekunde|vor \d+[.,]?\d* minuta|vor \d+[.,]?\d* minute|vor \d+[.,]?\d* sekund|vor \d+[.,]?\d* stunde|i \d+[.,]?\d* sekunde|vor \d+[.,]?\d* manet|vor \d+[.,]?\d* stund|cor \d+[.,]?\d* wuca|i \d+[.,]?\d* minuta|i \d+[.,]?\d* minute|i \d+[.,]?\d* sekund|i \d+[.,]?\d* stunde|vor \d+[.,]?\d* wuca|cor \d+[.,]?\d* jar|i \d+[.,]?\d* manet|i \d+[.,]?\d* stund|vor \d+[.,]?\d* jar|vor \d+[.,]?\d* tag|i \d+[.,]?\d* wuca|i \d+[.,]?\d* jar|i \d+[.,]?\d* tag)$`),
		KnownWords:      []string{"christmanet", "herbstmanet", "this minute", "wintermanet", "last month", "next month", "this month", "last week", "last year", "next week", "next year", "this hour", "this week", "this year", "abrille", "frontag", "minutta", "mittwuc", "samstag", "schtund", "sekunda", "sunntag", "wimanet", "bracet", "fritag", "gester", "heiwet", "hornig", "jenner", "mantag", "oigste", "zistag", "hitte", "manet", "marze", "meije", "more", "wuca", "abr", "bra", "chr", "fri", "fro", "gmt", "hei", "her", "hor", "jar", "jen", "man", "mar", "mei", "mit", "now", "oig", "sam", "sun", "tag", "utc", "wim", "win", "zis", "am", "pm", " ", "'", "+", ",", "-", ".", "/", ":", ";", "@", "[", "]", "z", "|"},
	})
}
