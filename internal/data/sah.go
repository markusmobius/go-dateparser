// Code is generated by script; DO NOT EDIT.

package data

import "github.com/markusmobius/go-dateparser/internal/regexp"

var (
	sah_Locale LocaleData
)

func init() {
	sah_Locale = merge(nil, LocaleData{
		Name:      "sah",
		DateOrder: "YMD",
		Charset:   []rune(`ceghinorstuzабгдийклмнопрстухчыьэҕҥүһө`),
		Translations: map[string][]string{
			"атырдьых ыиын": {"august"},
			"атырдьых ыиа":  {"august"},
			"балаҕан ыиын":  {"september"},
			"баскыһыанньа":  {"sunday"},
			"бэнидиэнньик":  {"monday"},
			"оптуорунньук":  {"tuesday"},
			"балаҕан ыиа":   {"september"},
			"кулун тутар":   {"march"},
			"муус устар":    {"april"},
			"тохсунньу":     {"january"},
			"алтынньы":      {"october"},
			"ахсынньы":      {"december"},
			"бэс ыиын":      {"june"},
			"бээтиҥсэ":      {"friday"},
			"сэтинньи":      {"november"},
			"сөкүүндэ":      {"second"},
			"ыам ыиын":      {"may"},
			"бэс ыиа":       {"june"},
			"мүнүүтэ":       {"minute"},
			"нэдиэлэ":       {"week"},
			"олунньу":       {"february"},
			"от ыиын":       {"july"},
			"субуота":       {"saturday"},
			"чэппиэр":       {"thursday"},
			"ыам ыиа":       {"may"},
			"от ыиа":        {"july"},
			"сэрэдэ":        {"wednesday"},
			"олун":          {"february"},
			"тохс":          {"january"},
			"чаас":          {"hour"},
			"gmt":           {"gmt"},
			"utc":           {"utc"},
			"алт":           {"october"},
			"атр":           {"august"},
			"ахс":           {"december"},
			"блҕ":           {"september"},
			"бэс":           {"june"},
			"клн":           {"march"},
			"күн":           {"day"},
			"мсу":           {"april"},
			"оти":           {"july"},
			"сыл":           {"year"},
			"сэт":           {"november"},
			"ыам":           {"may"},
			"am":            {"am"},
			"pm":            {"pm"},
			"бн":            {"monday"},
			"бс":            {"sunday"},
			"бэ":            {"friday"},
			"оп":            {"tuesday"},
			"сб":            {"saturday"},
			"сэ":            {"wednesday"},
			"чп":            {"thursday"},
			"ыи":            {"month"},
			"эи":            {"am"},
			"эк":            {"pm"},
			" ":             {" "},
			"'":             {""},
			"+":             {"+"},
			",":             {""},
			"-":             {"-"},
			".":             {"."},
			"/":             {"/"},
			":":             {":"},
			";":             {""},
			"@":             {""},
			"[":             {""},
			"]":             {""},
			"z":             {"z"},
			"|":             {""},
		},
		RelativeType: map[string]string{
			"ааспыт нэдиэлэ": "1 week ago",
			"кэлэр нэдиэлэ":  "in 1 week",
			"this minute":    "0 minute ago",
			"аныгыскы ыи":    "in 1 month",
			"бу нэдиэлэ":     "0 week ago",
			"this hour":      "0 hour ago",
			"ааспыт ыи":      "1 month ago",
			"былырыын":       "1 year ago",
			"билигин":        "0 second ago",
			"бэҕэһээ":        "1 day ago",
			"сарсын":         "in 1 day",
			"бу ыи":          "0 month ago",
			"быиыл":          "0 year ago",
			"бүгүн":          "0 day ago",
			"эһиил":          "in 1 year",
		},
		RelativeTypeRegexes: []ReplacementData{
			{regexp.MustCompile(`(?i)(\d+[.,]?\d*) сөкүүндэ ынараа өттүгэр`), "$1 second ago"},
			{regexp.MustCompile(`(?i)(\d+[.,]?\d*) мүнүүтэ ынараа өттүгэр`), "$1 minute ago"},
			{regexp.MustCompile(`(?i)(\d+[.,]?\d*) нэдиэлэ анараа өттүгэр`), "$1 week ago"},
			{regexp.MustCompile(`(?i)(\d+[.,]?\d*) чаас ынараа өттүгэр`), "$1 hour ago"},
			{regexp.MustCompile(`(?i)(\d+[.,]?\d*) күн ынараа өттүгэр`), "$1 day ago"},
			{regexp.MustCompile(`(?i)(\d+[.,]?\d*) сыл ынараа өттүгэр`), "$1 year ago"},
			{regexp.MustCompile(`(?i)(\d+[.,]?\d*) сөк анараа өттүгэр`), "$1 second ago"},
			{regexp.MustCompile(`(?i)(\d+[.,]?\d*) ыи ынараа өттүгэр`), "$1 month ago"},
			{regexp.MustCompile(`(?i)(\d+[.,]?\d*) сөкүүндэннэн`), "in $1 second"},
			{regexp.MustCompile(`(?i)(\d+[.,]?\d*) мүнүүтэннэн`), "in $1 minute"},
			{regexp.MustCompile(`(?i)(\d+[.,]?\d*) нэдиэлэннэн`), "in $1 week"},
			{regexp.MustCompile(`(?i)(\d+[.,]?\d*) чааһынан`), "in $1 hour"},
			{regexp.MustCompile(`(?i)(\d+[.,]?\d*) күнүнэн`), "in $1 day"},
			{regexp.MustCompile(`(?i)(\d+[.,]?\d*) сылынан`), "in $1 year"},
			{regexp.MustCompile(`(?i)(\d+[.,]?\d*) ыиынан`), "in $1 month"},
		},
		RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(\d+[.,]?\d* сөкүүндэ ынараа өттүгэр|\d+[.,]?\d* мүнүүтэ ынараа өттүгэр|\d+[.,]?\d* нэдиэлэ анараа өттүгэр|\d+[.,]?\d* чаас ынараа өттүгэр|\d+[.,]?\d* күн ынараа өттүгэр|\d+[.,]?\d* сыл ынараа өттүгэр|\d+[.,]?\d* сөк анараа өттүгэр|\d+[.,]?\d* ыи ынараа өттүгэр|\d+[.,]?\d* сөкүүндэннэн|\d+[.,]?\d* мүнүүтэннэн|\d+[.,]?\d* нэдиэлэннэн|\d+[.,]?\d* чааһынан|\d+[.,]?\d* күнүнэн|\d+[.,]?\d* сылынан|\d+[.,]?\d* ыиынан)(\z|[^\pL\pM\d]|_)`),
		RxExactCombined: regexp.MustCompile(`(?i)^(\d+[.,]?\d* сөкүүндэ ынараа өттүгэр|\d+[.,]?\d* мүнүүтэ ынараа өттүгэр|\d+[.,]?\d* нэдиэлэ анараа өттүгэр|\d+[.,]?\d* чаас ынараа өттүгэр|\d+[.,]?\d* күн ынараа өттүгэр|\d+[.,]?\d* сыл ынараа өттүгэр|\d+[.,]?\d* сөк анараа өттүгэр|\d+[.,]?\d* ыи ынараа өттүгэр|\d+[.,]?\d* сөкүүндэннэн|\d+[.,]?\d* мүнүүтэннэн|\d+[.,]?\d* нэдиэлэннэн|\d+[.,]?\d* чааһынан|\d+[.,]?\d* күнүнэн|\d+[.,]?\d* сылынан|\d+[.,]?\d* ыиынан)$`),
		KnownWords:      []string{"ааспыт нэдиэлэ", "атырдьых ыиын", "кэлэр нэдиэлэ", "атырдьых ыиа", "балаҕан ыиын", "баскыһыанньа", "бэнидиэнньик", "оптуорунньук", "this minute", "аныгыскы ыи", "балаҕан ыиа", "кулун тутар", "бу нэдиэлэ", "муус устар", "this hour", "ааспыт ыи", "тохсунньу", "алтынньы", "ахсынньы", "былырыын", "бэс ыиын", "бээтиҥсэ", "сэтинньи", "сөкүүндэ", "ыам ыиын", "билигин", "бэс ыиа", "бэҕэһээ", "мүнүүтэ", "нэдиэлэ", "олунньу", "от ыиын", "субуота", "чэппиэр", "ыам ыиа", "от ыиа", "сарсын", "сэрэдэ", "бу ыи", "быиыл", "бүгүн", "эһиил", "олун", "тохс", "чаас", "gmt", "utc", "алт", "атр", "ахс", "блҕ", "бэс", "клн", "күн", "мсу", "оти", "сыл", "сэт", "ыам", "am", "pm", "бн", "бс", "бэ", "оп", "сб", "сэ", "чп", "ыи", "эи", "эк", " ", "'", "+", ",", "-", ".", "/", ":", ";", "@", "[", "]", "z", "|"},
	})
}
