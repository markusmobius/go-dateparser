// Code is generated by script; DO NOT EDIT.

package data

import "github.com/markusmobius/go-dateparser/internal/regexp"

var (
	ee_Locale    LocaleData
	ee_TG_Locale LocaleData
)

func init() {
	ee_Locale = merge(nil, LocaleData{
		Name:      "ee",
		DateOrder: "MDY",
		Charset:   []rune(`bcdefghiklnorstuvwxyzĩŋƒɔɖɛɣ`),
		Translations: map[string][]string{
			"adeɛmekpɔxe": {"november"},
			"kɔsiɖa ɖeka": {"week"},
			"deasiamime":  {"august"},
			"aɖabaƒoƒo":   {"minute"},
			"anyɔnyɔ":     {"september"},
			"memleɖa":     {"saturday"},
			"siamlɔm":     {"july"},
			"afɔfie":      {"april"},
			"dzodze":      {"february"},
			"gaƒoƒo":      {"hour"},
			"kɔsiɖa":      {"sunday"},
			"sekend":      {"second"},
			"tedoxe":      {"march"},
			"yawoɖa":      {"thursday"},
			"blaɖa":       {"tuesday"},
			"dzome":       {"december"},
			"dzove":       {"january"},
			"dzoɖa":       {"monday"},
			"ŋkeke":       {"day"},
			"ɣetrɔ":       {"pm"},
			"ɣleti":       {"month"},
			"dama":        {"may"},
			"fiɖa":        {"friday"},
			"kele":        {"october"},
			"kuɖa":        {"wednesday"},
			"masa":        {"june"},
			"ade":         {"november"},
			"afɔ":         {"april"},
			"any":         {"september"},
			"bla":         {"tuesday"},
			"dam":         {"may"},
			"dea":         {"august"},
			"dzd":         {"february"},
			"dzm":         {"december"},
			"dzo":         {"monday"},
			"dzv":         {"january"},
			"fiɖ":         {"friday"},
			"gmt":         {"gmt"},
			"kel":         {"october"},
			"kuɖ":         {"wednesday"},
			"kɔs":         {"sunday"},
			"mas":         {"june"},
			"mem":         {"saturday"},
			"sia":         {"july"},
			"ted":         {"march"},
			"utc":         {"utc"},
			"yaw":         {"thursday"},
			"ŋdi":         {"am"},
			"am":          {"am"},
			"pm":          {"pm"},
			"ƒe":          {"year"},
			" ":           {" "},
			"'":           {""},
			"+":           {"+"},
			",":           {""},
			"-":           {"-"},
			".":           {"."},
			"/":           {"/"},
			":":           {":"},
			";":           {""},
			"@":           {""},
			"[":           {""},
			"]":           {""},
			"z":           {"z"},
			"|":           {""},
		},
		RelativeType: map[string]string{
			"kɔsiɖa si gbɔ na": "in 1 week",
			"kɔsiɖa si va yi":  "1 week ago",
			"ɣleti si gbɔ na":  "in 1 month",
			"ɣleti si va yi":   "1 month ago",
			"etsɔ si gbɔna":    "in 1 day",
			"etsɔ si va yi":    "1 day ago",
			"ƒe si gbɔ na":     "in 1 year",
			"this minute":      "0 minute ago",
			"ƒe si va yi":      "1 year ago",
			"kɔsiɖa sia":       "0 week ago",
			"this hour":        "0 hour ago",
			"ɣleti sia":        "0 month ago",
			"ƒe sia":           "0 year ago",
			"egbe":             "0 day ago",
			"fifi":             "0 second ago",
		},
		RelativeTypeRegexes: []ReplacementData{
			{regexp.MustCompile(`(?i)aɖabaƒoƒo (\d+[.,]?\d*) si wo va yi`), "$1 minute ago"},
			{regexp.MustCompile(`(?i)aɖabaƒoƒo (\d+[.,]?\d*) si va yi`), "$1 minute ago"},
			{regexp.MustCompile(`(?i)gaƒoƒo (\d+[.,]?\d*) si wo va yi`), "$1 hour ago"},
			{regexp.MustCompile(`(?i)kɔsiɖa (\d+[.,]?\d*) si wo va yi`), "$1 week ago"},
			{regexp.MustCompile(`(?i)le aɖabaƒoƒo (\d+[.,]?\d*) wo me`), "in $1 minute"},
			{regexp.MustCompile(`(?i)sekend (\d+[.,]?\d*) si wo va yi`), "$1 second ago"},
			{regexp.MustCompile(`(?i)le ƒe (\d+[.,]?\d*) si gbɔna me`), "in $1 year"},
			{regexp.MustCompile(`(?i)le ƒe (\d+[.,]?\d*) si va yi me`), "$1 year ago"},
			{regexp.MustCompile(`(?i)ŋkeke (\d+[.,]?\d*) si wo va yi`), "$1 day ago"},
			{regexp.MustCompile(`(?i)ɣleti (\d+[.,]?\d*) si wo va yi`), "$1 month ago"},
			{regexp.MustCompile(`(?i)gaƒoƒo (\d+[.,]?\d*) si va yi`), "$1 hour ago"},
			{regexp.MustCompile(`(?i)kɔsiɖa (\d+[.,]?\d*) si va yi`), "$1 week ago"},
			{regexp.MustCompile(`(?i)le aɖabaƒoƒo (\d+[.,]?\d*) me`), "in $1 minute"},
			{regexp.MustCompile(`(?i)le gaƒoƒo (\d+[.,]?\d*) wo me`), "in $1 hour"},
			{regexp.MustCompile(`(?i)le kɔsiɖa (\d+[.,]?\d*) wo me`), "in $1 week"},
			{regexp.MustCompile(`(?i)le sekend (\d+[.,]?\d*) wo me`), "in $1 second"},
			{regexp.MustCompile(`(?i)sekend (\d+[.,]?\d*) si va yi`), "$1 second ago"},
			{regexp.MustCompile(`(?i)le ŋkeke (\d+[.,]?\d*) wo me`), "in $1 day"},
			{regexp.MustCompile(`(?i)le ɣleti (\d+[.,]?\d*) wo me`), "in $1 month"},
			{regexp.MustCompile(`(?i)ŋkeke (\d+[.,]?\d*) si va yi`), "$1 day ago"},
			{regexp.MustCompile(`(?i)ƒe (\d+[.,]?\d*) si va yi me`), "$1 year ago"},
			{regexp.MustCompile(`(?i)ƒe (\d+[.,]?\d*) si wo va yi`), "$1 year ago"},
			{regexp.MustCompile(`(?i)ɣleti (\d+[.,]?\d*) si va yi`), "$1 month ago"},
			{regexp.MustCompile(`(?i)le gaƒoƒo (\d+[.,]?\d*) me`), "in $1 hour"},
			{regexp.MustCompile(`(?i)le kɔsiɖa (\d+[.,]?\d*) me`), "in $1 week"},
			{regexp.MustCompile(`(?i)le sekend (\d+[.,]?\d*) me`), "in $1 second"},
			{regexp.MustCompile(`(?i)le ŋkeke (\d+[.,]?\d*) me`), "in $1 day"},
			{regexp.MustCompile(`(?i)le ɣleti (\d+[.,]?\d*) me`), "in $1 month"},
			{regexp.MustCompile(`(?i)ƒe (\d+[.,]?\d*) si va yi`), "$1 year ago"},
			{regexp.MustCompile(`(?i)le ƒe (\d+[.,]?\d*) me`), "in $1 year"},
		},
		RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(aɖabaƒoƒo \d+[.,]?\d* si wo va yi|aɖabaƒoƒo \d+[.,]?\d* si va yi|gaƒoƒo \d+[.,]?\d* si wo va yi|kɔsiɖa \d+[.,]?\d* si wo va yi|le aɖabaƒoƒo \d+[.,]?\d* wo me|sekend \d+[.,]?\d* si wo va yi|le ƒe \d+[.,]?\d* si gbɔna me|le ƒe \d+[.,]?\d* si va yi me|ŋkeke \d+[.,]?\d* si wo va yi|ɣleti \d+[.,]?\d* si wo va yi|gaƒoƒo \d+[.,]?\d* si va yi|kɔsiɖa \d+[.,]?\d* si va yi|le aɖabaƒoƒo \d+[.,]?\d* me|le gaƒoƒo \d+[.,]?\d* wo me|le kɔsiɖa \d+[.,]?\d* wo me|le sekend \d+[.,]?\d* wo me|sekend \d+[.,]?\d* si va yi|le ŋkeke \d+[.,]?\d* wo me|le ɣleti \d+[.,]?\d* wo me|ŋkeke \d+[.,]?\d* si va yi|ƒe \d+[.,]?\d* si va yi me|ƒe \d+[.,]?\d* si wo va yi|ɣleti \d+[.,]?\d* si va yi|le gaƒoƒo \d+[.,]?\d* me|le kɔsiɖa \d+[.,]?\d* me|le sekend \d+[.,]?\d* me|le ŋkeke \d+[.,]?\d* me|le ɣleti \d+[.,]?\d* me|ƒe \d+[.,]?\d* si va yi|le ƒe \d+[.,]?\d* me)(\z|[^\pL\pM\d]|_)`),
		RxExactCombined: regexp.MustCompile(`(?i)^(aɖabaƒoƒo \d+[.,]?\d* si wo va yi|aɖabaƒoƒo \d+[.,]?\d* si va yi|gaƒoƒo \d+[.,]?\d* si wo va yi|kɔsiɖa \d+[.,]?\d* si wo va yi|le aɖabaƒoƒo \d+[.,]?\d* wo me|sekend \d+[.,]?\d* si wo va yi|le ƒe \d+[.,]?\d* si gbɔna me|le ƒe \d+[.,]?\d* si va yi me|ŋkeke \d+[.,]?\d* si wo va yi|ɣleti \d+[.,]?\d* si wo va yi|gaƒoƒo \d+[.,]?\d* si va yi|kɔsiɖa \d+[.,]?\d* si va yi|le aɖabaƒoƒo \d+[.,]?\d* me|le gaƒoƒo \d+[.,]?\d* wo me|le kɔsiɖa \d+[.,]?\d* wo me|le sekend \d+[.,]?\d* wo me|sekend \d+[.,]?\d* si va yi|le ŋkeke \d+[.,]?\d* wo me|le ɣleti \d+[.,]?\d* wo me|ŋkeke \d+[.,]?\d* si va yi|ƒe \d+[.,]?\d* si va yi me|ƒe \d+[.,]?\d* si wo va yi|ɣleti \d+[.,]?\d* si va yi|le gaƒoƒo \d+[.,]?\d* me|le kɔsiɖa \d+[.,]?\d* me|le sekend \d+[.,]?\d* me|le ŋkeke \d+[.,]?\d* me|le ɣleti \d+[.,]?\d* me|ƒe \d+[.,]?\d* si va yi|le ƒe \d+[.,]?\d* me)$`),
		KnownWords:      []string{"kɔsiɖa si gbɔ na", "kɔsiɖa si va yi", "ɣleti si gbɔ na", "ɣleti si va yi", "etsɔ si gbɔna", "etsɔ si va yi", "ƒe si gbɔ na", "adeɛmekpɔxe", "kɔsiɖa ɖeka", "this minute", "ƒe si va yi", "deasiamime", "kɔsiɖa sia", "aɖabaƒoƒo", "this hour", "ɣleti sia", "anyɔnyɔ", "memleɖa", "siamlɔm", "afɔfie", "dzodze", "gaƒoƒo", "kɔsiɖa", "sekend", "tedoxe", "yawoɖa", "ƒe sia", "blaɖa", "dzome", "dzove", "dzoɖa", "ŋkeke", "ɣetrɔ", "ɣleti", "dama", "egbe", "fifi", "fiɖa", "kele", "kuɖa", "masa", "ade", "afɔ", "any", "bla", "dam", "dea", "dzd", "dzm", "dzo", "dzv", "fiɖ", "gmt", "kel", "kuɖ", "kɔs", "mas", "mem", "sia", "ted", "utc", "yaw", "ŋdi", "am", "pm", "ƒe", " ", "'", "+", ",", "-", ".", "/", ":", ";", "@", "[", "]", "z", "|"},
	})

	ee_TG_Locale = merge(&ee_Locale, LocaleData{
		Name:      "ee-TG",
		DateOrder: "MDY",
	})
}
